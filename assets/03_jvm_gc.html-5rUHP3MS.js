import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as l,a as t}from"./app-BJoa2Y-9.js";const r={},n=t('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>垃圾的定义： 不再被引用的对象就是垃圾。<br> 那如何判断一个对象是否被引用呢？</p><ul><li>引用计数法 用一个标记记录引用次数，当引用次数为0时，就是垃圾</li><li>可达性分析法 从GC Roots开始，遍历所有对象，如果对象不可达，就是垃圾。</li></ul><h2 id="垃圾回收算法" tabindex="-1"><a class="header-anchor" href="#垃圾回收算法"><span>垃圾回收算法</span></a></h2><ul><li>标记-清除算法</li><li>标记-压缩算法</li><li>复制算法</li><li>分代算法</li></ul><h2 id="垃圾回收器" tabindex="-1"><a class="header-anchor" href="#垃圾回收器"><span>垃圾回收器</span></a></h2><h3 id="serial收集器" tabindex="-1"><a class="header-anchor" href="#serial收集器"><span>Serial收集器</span></a></h3><h3 id="parnew收集器" tabindex="-1"><a class="header-anchor" href="#parnew收集器"><span>ParNew收集器</span></a></h3><h3 id="parallel-scavenge收集器" tabindex="-1"><a class="header-anchor" href="#parallel-scavenge收集器"><span>Parallel Scavenge收集器</span></a></h3><h3 id="serial-old收集器" tabindex="-1"><a class="header-anchor" href="#serial-old收集器"><span>Serial Old收集器</span></a></h3><h3 id="parallel-old收集器" tabindex="-1"><a class="header-anchor" href="#parallel-old收集器"><span>Parallel Old收集器</span></a></h3><h3 id="cms收集器" tabindex="-1"><a class="header-anchor" href="#cms收集器"><span>CMS收集器</span></a></h3><h3 id="g1收集器" tabindex="-1"><a class="header-anchor" href="#g1收集器"><span>G1收集器</span></a></h3><h3 id="zgc收集器" tabindex="-1"><a class="header-anchor" href="#zgc收集器"><span>ZGC收集器</span></a></h3><h3 id="shenandoah收集器" tabindex="-1"><a class="header-anchor" href="#shenandoah收集器"><span>Shenandoah收集器</span></a></h3>',15),i=[n];function s(o,h){return a(),l("div",null,i)}const p=e(r,[["render",s],["__file","03_jvm_gc.html.vue"]]),m=JSON.parse('{"path":"/jvm/03_jvm_gc.html","title":"JVM的垃圾回收","lang":"zh-CN","frontmatter":{"title":"JVM的垃圾回收","icon":"fab fa-markdown","order":3,"category":["Java"],"tag":["jvm"],"editLink":false,"description":"前言 垃圾的定义： 不再被引用的对象就是垃圾。 那如何判断一个对象是否被引用呢？ 引用计数法 用一个标记记录引用次数，当引用次数为0时，就是垃圾 可达性分析法 从GC Roots开始，遍历所有对象，如果对象不可达，就是垃圾。 垃圾回收算法 标记-清除算法 标记-压缩算法 复制算法 分代算法 垃圾回收器 Serial收集器 ParNew收集器 Paral...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/jvm/03_jvm_gc.html"}],["meta",{"property":"og:site_name","content":"luoliang的笔记"}],["meta",{"property":"og:title","content":"JVM的垃圾回收"}],["meta",{"property":"og:description","content":"前言 垃圾的定义： 不再被引用的对象就是垃圾。 那如何判断一个对象是否被引用呢？ 引用计数法 用一个标记记录引用次数，当引用次数为0时，就是垃圾 可达性分析法 从GC Roots开始，遍历所有对象，如果对象不可达，就是垃圾。 垃圾回收算法 标记-清除算法 标记-压缩算法 复制算法 分代算法 垃圾回收器 Serial收集器 ParNew收集器 Paral..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T02:43:53.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"jvm"}],["meta",{"property":"article:modified_time","content":"2024-03-13T02:43:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM的垃圾回收\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-13T02:43:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"垃圾回收算法","slug":"垃圾回收算法","link":"#垃圾回收算法","children":[]},{"level":2,"title":"垃圾回收器","slug":"垃圾回收器","link":"#垃圾回收器","children":[{"level":3,"title":"Serial收集器","slug":"serial收集器","link":"#serial收集器","children":[]},{"level":3,"title":"ParNew收集器","slug":"parnew收集器","link":"#parnew收集器","children":[]},{"level":3,"title":"Parallel Scavenge收集器","slug":"parallel-scavenge收集器","link":"#parallel-scavenge收集器","children":[]},{"level":3,"title":"Serial Old收集器","slug":"serial-old收集器","link":"#serial-old收集器","children":[]},{"level":3,"title":"Parallel Old收集器","slug":"parallel-old收集器","link":"#parallel-old收集器","children":[]},{"level":3,"title":"CMS收集器","slug":"cms收集器","link":"#cms收集器","children":[]},{"level":3,"title":"G1收集器","slug":"g1收集器","link":"#g1收集器","children":[]},{"level":3,"title":"ZGC收集器","slug":"zgc收集器","link":"#zgc收集器","children":[]},{"level":3,"title":"Shenandoah收集器","slug":"shenandoah收集器","link":"#shenandoah收集器","children":[]}]}],"git":{"createdTime":1710297833000,"updatedTime":1710297833000,"contributors":[{"name":"William","email":"wll@example.com","commits":1}]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"jvm/03_jvm_gc.md","localizedDate":"2024年3月13日","autoDesc":true}');export{p as comp,m as data};
