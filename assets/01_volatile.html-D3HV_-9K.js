import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as o,a,b as p,d as l,e as i}from"./app-CyGvDN_n.js";const c={},r=i(`<h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h3><p>根据java内存模型（JMM），区分共享内存区域和线程私有内存区域，线程对变量的修改不会马上同步到其他线程，所以在多线程间对公共变量修改，其他线程不会马上读到最新的数据。<code>volatile</code>关键字就是为了解决多线程间共享变量的可见性，只要在共享变量前加了<code>volatile</code>关键字，某线程修改公共变量后，其他线程立刻读到最新数据。</p><h3 id="可见性原理" tabindex="-1"><a class="header-anchor" href="#可见性原理"><span>可见性原理</span></a></h3><p>我们先看一段java代码示例</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test1</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Javap命令查看字节码文件， <code>javap -v Test1.class</code> 。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 略。。
// 自看最关键的地方，加了volatile关键字的会有 ACC_VOLATILE标识
 public volatile int c;
    descriptor: I
    flags: ACC_PUBLIC, ACC_VOLATILE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在JVM层面，如果发现ACC_VOLATILE标识，在写改字段的时候会添加lock前缀指令：<code>lock cmpxchg %rdi,(%rdx)</code>, 该指令的作用：</p><ol><li>该指令会将当前缓存数据回写到内存中。</li><li>其他处理器的缓存失效</li></ol><p>在早期的CPU，lock指令会锁总线，其他线程操作会阻塞，直到锁释放。现在比较新的CPU都是锁缓存，再结合缓存一致性（MESI）来保证数据同步。</p><h3 id="禁止指令重排序" tabindex="-1"><a class="header-anchor" href="#禁止指令重排序"><span>禁止指令重排序</span></a></h3><p>为了提高性能，JMM在保证不改变语义的情况下，可能会对指令进行重排序，添加了volatile关键字会阻止这种优化。</p><h3 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h3><h4 id="idea添加javap命令" tabindex="-1"><a class="header-anchor" href="#idea添加javap命令"><span>IDEA添加javap命令</span></a></h4><p><img src="https://images.luoliang.top/idea_javap.png" alt="" loading="lazy"><br> 命名： <code>C:\\dev\\Java\\jdk-1.8\\bin\\javap.exe</code><br> 参数：<code>-v $OutputPath$\\$FileDirRelativeToSourcepath$\\$FileNameWithoutAllExtensions$.class</code><br> 工作目录： <code>$ProjectFileDir$</code></p><h4 id="参考网站" tabindex="-1"><a class="header-anchor" href="#参考网站"><span>参考网站</span></a></h4>`,16),d={href:"https://pdai.tech/md/java/thread/java-thread-x-key-volatile.html",target:"_blank",rel:"noopener noreferrer"};function u(v,k){const n=e("ExternalLinkIcon");return t(),o("div",null,[r,a("p",null,[a("a",d,[p("关键字: volatile详解"),l(n)])])])}const b=s(c,[["render",u],["__file","01_volatile.html.vue"]]),g=JSON.parse('{"path":"/java/01_volatile.html","title":"volatile","lang":"zh-CN","frontmatter":{"title":"volatile","icon":"fab fa-markdown","category":["Java"],"tag":["java基础"],"editLink":false,"order":1,"description":"简介 根据java内存模型（JMM），区分共享内存区域和线程私有内存区域，线程对变量的修改不会马上同步到其他线程，所以在多线程间对公共变量修改，其他线程不会马上读到最新的数据。volatile关键字就是为了解决多线程间共享变量的可见性，只要在共享变量前加了volatile关键字，某线程修改公共变量后，其他线程立刻读到最新数据。 可见性原理 我们先看一段...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/java/01_volatile.html"}],["meta",{"property":"og:site_name","content":"luoliang的笔记"}],["meta",{"property":"og:title","content":"volatile"}],["meta",{"property":"og:description","content":"简介 根据java内存模型（JMM），区分共享内存区域和线程私有内存区域，线程对变量的修改不会马上同步到其他线程，所以在多线程间对公共变量修改，其他线程不会马上读到最新的数据。volatile关键字就是为了解决多线程间共享变量的可见性，只要在共享变量前加了volatile关键字，某线程修改公共变量后，其他线程立刻读到最新数据。 可见性原理 我们先看一段..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://images.luoliang.top/idea_javap.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-30T09:16:13.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"java基础"}],["meta",{"property":"article:modified_time","content":"2024-03-30T09:16:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"volatile\\",\\"image\\":[\\"https://images.luoliang.top/idea_javap.png\\"],\\"dateModified\\":\\"2024-03-30T09:16:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"可见性原理","slug":"可见性原理","link":"#可见性原理","children":[]},{"level":3,"title":"禁止指令重排序","slug":"禁止指令重排序","link":"#禁止指令重排序","children":[]},{"level":3,"title":"附录","slug":"附录","link":"#附录","children":[]}],"git":{"createdTime":1711771015000,"updatedTime":1711790173000,"contributors":[{"name":"William","email":"wll@example.com","commits":2}]},"readingTime":{"minutes":1.58,"words":473},"filePathRelative":"java/01_volatile.md","localizedDate":"2024年3月30日","autoDesc":true}');export{b as comp,g as data};
